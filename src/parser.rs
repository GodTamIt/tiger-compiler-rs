use std::collections::{HashMap, VecDeque};
use scanner::Token;
use serde_json;

pub fn parse(tokens: &VecDeque<Token>) {

}



fn get_action_chars() -> Vec<HashMap<String, String>> {
    serde_json::from_str(r#"[{"let":"s"},{"type":"s","":"s"},{"in":"s"},{"var":"s","":"s"},{"var":"r","":"r"},{"type":"s","":"s"},{"in":"r",":=":"r",";":"r","]":"r","var":"r",",":"r","func":"r",")":"r","then":"r","do":"r","to":"r","~":"r","":"r"},{"id":"s"},{"id":"s","if":"s","while":"s","for":"s","break":"s","return":"s"},{"func":"s","":"s"},{"func":"r","":"r"},{"var":"s","":"s"},{"id":"s"},{"var":"r","":"r"},{":=":"s"},{"end":"s"},{"end":"r","id":"s","if":"s","endif":"r","else":"r","while":"s","enddo":"r","for":"s","break":"s","return":"s"},{";":"s"},{":=":"s"},{"id":"s","intlit":"s","(":"s","TRUE":"s","FALSE":"s","_":"s","floatlit":"s"},{"id":"s","intlit":"s","(":"s","TRUE":"s","FALSE":"s","_":"s","floatlit":"s"},{"id":"s"},{";":"r"},{"id":"s","intlit":"s","(":"s","TRUE":"s","FALSE":"s","_":"s","floatlit":"s"},{"[":"s","":"s"},{"in":"r"},{"in":"r"},{"func":"s","":"s"},{"id":"s"},{"func":"r","":"r"},{":":"s"},{":":"r",",":"s"},{"id":"s","boolean":"s","int":"s","float":"s","unit":"s","array":"s"},{"$":"a"},{"end":"r","endif":"r","else":"r","enddo":"r"},{"end":"r","id":"r","if":"r","endif":"r","else":"r","while":"r","enddo":"r","for":"r","break":"r","return":"r"},{"id":"s","intlit":"s","(":"s","TRUE":"s","FALSE":"s","_":"s","floatlit":"s"},{"then":"s","~":"s"},{";":"r","]":"r",",":"r",")":"r","then":"r","do":"r","to":"r","~":"r"},{"&":"s","":"s"},{"&":"r","=":"s","<>":"s","<=":"s",">=":"s","<":"s",">":"s","+":"s","-":"s","":"r"},{"&":"r","=":"r","<>":"r","<=":"r",">=":"r","<":"r",">":"r","+":"r","-":"r","*":"s","/":"s","":"r"},{"&":"r","=":"r","<>":"r","<=":"r",">=":"r","<":"r",">":"r","+":"r","-":"r","*":"r","/":"r","":"r"},{"&":"r","=":"r","<>":"r","<=":"r",">=":"r","<":"r",">":"r","+":"r","-":"r","*":"r","/":"r","":"r"},{"[":"s","(":"s","&":"r","=":"r","<>":"r","<=":"r",">=":"r","<":"r",">":"r","+":"r","-":"r","*":"r","/":"r","":"r"},{"id":"s","intlit":"s","(":"s","TRUE":"s","FALSE":"s","_":"s","floatlit":"s"},{";":"r","&":"r","=":"r","<>":"r","<=":"r",">=":"r","<":"r",">":"r","+":"r","-":"r","*":"r","/":"r","":"r"},{";":"r","&":"r","=":"r","<>":"r","<=":"r",">=":"r","<":"r",">":"r","+":"r","-":"r","*":"r","/":"r","":"r"},{";":"r","&":"r","=":"r","<>":"r","<=":"r",">=":"r","<":"r",">":"r","+":"r","-":"r","*":"r","/":"r","":"r"},{";":"r","&":"r","=":"r","<>":"r","<=":"r",">=":"r","<":"r",">":"r","+":"r","-":"r","*":"r","/":"r","":"r"},{";":"r","&":"r","=":"r","<>":"r","<=":"r",">=":"r","<":"r",">":"r","+":"r","-":"r","*":"r","/":"r","":"r"},{"do":"s","~":"s"},{":=":"s"},{";":"r","~":"s"},{":=":"r"},{":=":"r"},{"id":"s","intlit":"s","(":"s","TRUE":"s","FALSE":"s","_":"s","floatlit":"s"},{"in":"r"},{"(":"s"},{"id":"s","boolean":"s","int":"s","float":"s","unit":"s","array":"s"},{"id":"s"},{";":"s"},{":=":"r",";":"r",",":"r",")":"r","begin":"r","":"r"},{":=":"r",";":"r",",":"r",")":"r","begin":"r","":"r"},{":=":"r",";":"r",",":"r",")":"r","begin":"r","":"r"},{":=":"r",";":"r",",":"r",")":"r","begin":"r","":"r"},{":=":"r",";":"r",",":"r",")":"r","begin":"r","":"r"},{"[":"s"},{";":"r","~":"s"},{"id":"s","if":"s","while":"s","for":"s","break":"s","return":"s"},{"id":"s","intlit":"s","(":"s","TRUE":"s","FALSE":"s","_":"s","floatlit":"s"},{";":"r","]":"r",",":"r",")":"r","then":"r","do":"r","to":"r","~":"r"},{";":"r","]":"r",",":"r",")":"r","then":"r","do":"r","to":"r","~":"r"},{"id":"s","intlit":"s","(":"s","TRUE":"s","FALSE":"s","_":"s","floatlit":"s"},{"id":"s","intlit":"s","(":"s","TRUE":"s","FALSE":"s","_":"s","floatlit":"s"},{"id":"s","intlit":"s","(":"s","TRUE":"s","FALSE":"s","_":"s","floatlit":"s"},{"id":"r","intlit":"r","(":"r","TRUE":"r","FALSE":"r","_":"r","floatlit":"r"},{"id":"r","intlit":"r","(":"r","TRUE":"r","FALSE":"r","_":"r","floatlit":"r"},{"id":"r","intlit":"r","(":"r","TRUE":"r","FALSE":"r","_":"r","floatlit":"r"},{"id":"r","intlit":"r","(":"r","TRUE":"r","FALSE":"r","_":"r","floatlit":"r"},{"id":"r","intlit":"r","(":"r","TRUE":"r","FALSE":"r","_":"r","floatlit":"r"},{"id":"r","intlit":"r","(":"r","TRUE":"r","FALSE":"r","_":"r","floatlit":"r"},{"id":"r","intlit":"r","(":"r","TRUE":"r","FALSE":"r","_":"r","floatlit":"r"},{"id":"r","intlit":"r","(":"r","TRUE":"r","FALSE":"r","_":"r","floatlit":"r"},{"id":"s","intlit":"s","(":"s","TRUE":"s","FALSE":"s","_":"s","floatlit":"s"},{"id":"r","intlit":"r","(":"r","TRUE":"r","FALSE":"r","_":"r","floatlit":"r"},{"id":"r","intlit":"r","(":"r","TRUE":"r","FALSE":"r","_":"r","floatlit":"r"},{"id":"s","intlit":"s","(":"s","TRUE":"s","FALSE":"s","_":"s","floatlit":"s"},{"id":"s","intlit":"s","(":"s","TRUE":"s","FALSE":"s","_":"s","floatlit":"s","":"s"},{")":"s","~":"s"},{"id":"s","if":"s","while":"s","for":"s","break":"s","return":"s"},{"id":"s","intlit":"s","(":"s","TRUE":"s","FALSE":"s","_":"s","floatlit":"s"},{"]":"s","~":"s"},{"id":"s","":"s"},{":=":"s","":"s"},{":":"r"},{"type":"r","":"r"},{"intlit":"s"},{"endif":"s","else":"s"},{";":"r","]":"r",",":"r",")":"r","then":"r","do":"r","to":"r","~":"r"},{"&":"s","":"s"},{"&":"r","+":"s","-":"s","":"r"},{"&":"r","=":"r","<>":"r","<=":"r",">=":"r","<":"r",">":"r","+":"r","-":"r","*":"s","/":"s","":"r"},{"&":"r","=":"r","<>":"r","<=":"r",">=":"r","<":"r",">":"r","+":"r","-":"r","*":"r","/":"r","":"r"},{"]":"s","~":"s"},{")":"s"},{")":"r"},{")":"r"},{",":"s",")":"r","~":"s"},{"&":"r","=":"r","<>":"r","<=":"r",">=":"r","<":"r",">":"r","+":"r","-":"r","*":"r","/":"r","":"r"},{"enddo":"s"},{"to":"s","~":"s"},{":=":"r"},{")":"s"},{")":"r"},{")":"r"},{",":"s",")":"r"},{":":"s"},{";":"s"},{";":"r"},{"intlit":"s","TRUE":"s","FALSE":"s","_":"s","floatlit":"s"},{"]":"s"},{";":"r"},{"id":"s","if":"s","while":"s","for":"s","break":"s","return":"s"},{";":"r","]":"r",",":"r",")":"r","then":"r","do":"r","to":"r","~":"r"},{"&":"r","=":"r","<>":"r","<=":"r",">=":"r","<":"r",">":"r","+":"r","-":"r","*":"r","/":"r","":"r"},{"&":"r","=":"r","<>":"r","<=":"r",">=":"r","<":"r",">":"r","+":"r","-":"r","*":"r","/":"r","":"r"},{"id":"s","intlit":"s","(":"s","TRUE":"s","FALSE":"s","_":"s","floatlit":"s"},{";":"r"},{"id":"s","intlit":"s","(":"s","TRUE":"s","FALSE":"s","_":"s","floatlit":"s"},{":":"s"},{"id":"s"},{"id":"s","boolean":"s","int":"s","float":"s","unit":"s","array":"s"},{"var":"r","":"r"},{";":"r"},{"of":"s"},{"endif":"s"},{")":"r"},{"do":"s","~":"s"},{"id":"s","boolean":"s","int":"s","float":"s","unit":"s","array":"s"},{")":"r"},{",":"r",")":"r"},{"id":"s","boolean":"s","int":"s","float":"s","unit":"s","array":"s"},{";":"r"},{"id":"s","if":"s","while":"s","for":"s","break":"s","return":"s"},{"begin":"s"},{":=":"r",";":"r",",":"r",")":"r","begin":"r","":"r"},{"enddo":"s"},{"id":"s","if":"s","while":"s","for":"s","break":"s","return":"s"},{";":"r"},{"end":"s"},{";":"s"},{"func":"r","":"r"}]"#).unwrap()
}

fn get_action_nums() -> Vec<HashMap<String, u32>> {
    serde_json::from_str(r#"[{"let":1},{"type":7,"":6},{"in":8},{"var":12,"":6},{"var":2,"":2},{"type":7,"":6},{"in":74,":=":74,";":74,"]":74,"var":74,",":74,"func":74,")":74,"then":74,"do":74,"to":74,"~":74,"":74},{"id":14},{"id":24,"if":19,"while":20,"for":21,"break":22,"return":23},{"func":28,"":6},{"func":11,"":11},{"var":12,"":6},{"id":31},{"var":3,"":3},{":=":32},{"end":33},{"end":26,"id":24,"if":19,"endif":26,"else":26,"while":20,"enddo":26,"for":21,"break":22,"return":23},{";":35},{":=":36},{"id":44,"intlit":49,"(":45,"TRUE":46,"FALSE":47,"_":48,"floatlit":50},{"id":44,"intlit":49,"(":45,"TRUE":46,"FALSE":47,"_":48,"floatlit":50},{"id":52},{";":34},{"id":44,"intlit":49,"(":45,"TRUE":46,"FALSE":47,"_":48,"floatlit":50},{"[":56,"":6},{"in":1},{"in":18},{"func":28,"":6},{"id":58},{"func":12,"":12},{":":59},{":":14,",":60},{"id":66,"boolean":62,"int":63,"float":64,"unit":65,"array":67},{"$":0},{"end":27,"endif":27,"else":27,"enddo":27},{"end":28,"id":28,"if":28,"endif":28,"else":28,"while":28,"enddo":28,"for":28,"break":28,"return":28},{"id":44,"intlit":49,"(":45,"TRUE":46,"FALSE":47,"_":48,"floatlit":50},{"then":69,"~":70},{";":43,"]":43,",":43,")":43,"then":43,"do":43,"to":43,"~":43},{"&":73,"":6},{"&":48,"=":76,"<>":77,"<=":78,">=":79,"<":80,">":81,"+":82,"-":83,"":48},{"&":56,"=":56,"<>":56,"<=":56,">=":56,"<":56,">":56,"+":56,"-":56,"*":85,"/":86,"":56},{"&":60,"=":60,"<>":60,"<=":60,">=":60,"<":60,">":60,"+":60,"-":60,"*":60,"/":60,"":60},{"&":64,"=":64,"<>":64,"<=":64,">=":64,"<":64,">":64,"+":64,"-":64,"*":64,"/":64,"":64},{"[":87,"(":88,"&":65,"=":65,"<>":65,"<=":65,">=":65,"<":65,">":65,"+":65,"-":65,"*":65,"/":65,"":65},{"id":44,"intlit":49,"(":45,"TRUE":46,"FALSE":47,"_":48,"floatlit":50},{";":69,"&":69,"=":69,"<>":69,"<=":69,">=":69,"<":69,">":69,"+":69,"-":69,"*":69,"/":69,"":69},{";":70,"&":70,"=":70,"<>":70,"<=":70,">=":70,"<":70,">":70,"+":70,"-":70,"*":70,"/":70,"":70},{";":71,"&":71,"=":71,"<>":71,"<=":71,">=":71,"<":71,">":71,"+":71,"-":71,"*":71,"/":71,"":71},{";":72,"&":72,"=":72,"<>":72,"<=":72,">=":72,"<":72,">":72,"+":72,"-":72,"*":72,"/":72,"":72},{";":73,"&":73,"=":73,"<>":73,"<=":73,">=":73,"<":73,">":73,"+":73,"-":73,"*":73,"/":73,"":73},{"do":90,"~":70},{":=":91},{";":35,"~":70},{":=":36},{":=":37},{"id":44,"intlit":49,"(":45,"TRUE":46,"FALSE":47,"_":48,"floatlit":50},{"in":19},{"(":93},{"id":66,"boolean":62,"int":63,"float":64,"unit":65,"array":67},{"id":31},{";":96},{":=":5,";":5,",":5,")":5,"begin":5,"":5},{":=":6,";":6,",":6,")":6,"begin":6,"":6},{":=":7,";":7,",":7,")":7,"begin":7,"":7},{":=":8,";":8,",":8,")":8,"begin":8,"":8},{":=":9,";":9,",":9,")":9,"begin":9,"":9},{"[":97},{";":29,"~":70},{"id":24,"if":19,"while":20,"for":21,"break":22,"return":23},{"id":44,"intlit":49,"(":45,"TRUE":46,"FALSE":47,"_":48,"floatlit":50},{";":45,"]":45,",":45,")":45,"then":45,"do":45,"to":45,"~":45},{";":46,"]":46,",":46,")":46,"then":46,"do":46,"to":46,"~":46},{"id":44,"intlit":49,"(":45,"TRUE":46,"FALSE":47,"_":48,"floatlit":50},{"id":44,"intlit":49,"(":45,"TRUE":46,"FALSE":47,"_":48,"floatlit":50},{"id":44,"intlit":49,"(":45,"TRUE":46,"FALSE":47,"_":48,"floatlit":50},{"id":50,"intlit":50,"(":50,"TRUE":50,"FALSE":50,"_":50,"floatlit":50},{"id":51,"intlit":51,"(":51,"TRUE":51,"FALSE":51,"_":51,"floatlit":51},{"id":52,"intlit":52,"(":52,"TRUE":52,"FALSE":52,"_":52,"floatlit":52},{"id":53,"intlit":53,"(":53,"TRUE":53,"FALSE":53,"_":53,"floatlit":53},{"id":54,"intlit":54,"(":54,"TRUE":54,"FALSE":54,"_":54,"floatlit":54},{"id":55,"intlit":55,"(":55,"TRUE":55,"FALSE":55,"_":55,"floatlit":55},{"id":58,"intlit":58,"(":58,"TRUE":58,"FALSE":58,"_":58,"floatlit":58},{"id":59,"intlit":59,"(":59,"TRUE":59,"FALSE":59,"_":59,"floatlit":59},{"id":44,"intlit":49,"(":45,"TRUE":46,"FALSE":47,"_":48,"floatlit":50},{"id":62,"intlit":62,"(":62,"TRUE":62,"FALSE":62,"_":62,"floatlit":62},{"id":63,"intlit":63,"(":63,"TRUE":63,"FALSE":63,"_":63,"floatlit":63},{"id":44,"intlit":49,"(":45,"TRUE":46,"FALSE":47,"_":48,"floatlit":50},{"id":44,"intlit":49,"(":45,"TRUE":46,"FALSE":47,"_":48,"floatlit":50,"":6},{")":109,"~":70},{"id":24,"if":19,"while":20,"for":21,"break":22,"return":23},{"id":44,"intlit":49,"(":45,"TRUE":46,"FALSE":47,"_":48,"floatlit":50},{"]":112,"~":70},{"id":117,"":6},{":=":120,"":6},{":":15},{"type":4,"":4},{"intlit":121},{"endif":122,"else":123},{";":44,"]":44,",":44,")":44,"then":44,"do":44,"to":44,"~":44},{"&":73,"":6},{"&":49,"+":82,"-":83,"":49},{"&":57,"=":57,"<>":57,"<=":57,">=":57,"<":57,">":57,"+":57,"-":57,"*":85,"/":86,"":57},{"&":61,"=":61,"<>":61,"<=":61,">=":61,"<":61,">":61,"+":61,"-":61,"*":61,"/":61,"":61},{"]":125,"~":70},{")":126},{")":39},{")":40},{",":127,")":41,"~":70},{"&":68,"=":68,"<>":68,"<=":68,">=":68,"<":68,">":68,"+":68,"-":68,"*":68,"/":68,"":68},{"enddo":128},{"to":129,"~":70},{":=":38},{")":130},{")":21},{")":22},{",":131,")":23},{":":132},{";":133},{";":16},{"intlit":49,"TRUE":46,"FALSE":47,"_":48,"floatlit":50},{"]":135},{";":30},{"id":24,"if":19,"while":20,"for":21,"break":22,"return":23},{";":47,"]":47,",":47,")":47,"then":47,"do":47,"to":47,"~":47},{"&":66,"=":66,"<>":66,"<=":66,">=":66,"<":66,">":66,"+":66,"-":66,"*":66,"/":66,"":66},{"&":67,"=":67,"<>":67,"<=":67,">=":67,"<":67,">":67,"+":67,"-":67,"*":67,"/":67,"":67},{"id":44,"intlit":49,"(":45,"TRUE":46,"FALSE":47,"_":48,"floatlit":50},{";":32},{"id":44,"intlit":49,"(":45,"TRUE":46,"FALSE":47,"_":48,"floatlit":50},{":":139},{"id":117},{"id":66,"boolean":62,"int":63,"float":64,"unit":65,"array":67},{"var":13,"":13},{";":17},{"of":142},{"endif":143},{")":42},{"do":144,"~":70},{"id":66,"boolean":62,"int":63,"float":64,"unit":65,"array":67},{")":24},{",":25,")":25},{"id":66,"boolean":62,"int":63,"float":64,"unit":65,"array":67},{";":31},{"id":24,"if":19,"while":20,"for":21,"break":22,"return":23},{"begin":148},{":=":10,";":10,",":10,")":10,"begin":10,"":10},{"enddo":149},{"id":24,"if":19,"while":20,"for":21,"break":22,"return":23},{";":33},{"end":151},{";":152},{"func":20,"":20}]"#).unwrap()
}

fn get_gotos() -> Vec<HashMap<String, u32>> {
    serde_json::from_str(r#"[{}, {"DECLSEG": 2, "TYPEDECLS": 3, "TYPEDECL": 5, "EPSILON": 4}, {}, {"VARDECLS": 9, "VARDECL": 11, "EPSILON": 10}, {}, {"TYPEDECLS": 13, "TYPEDECL": 5, "EPSILON": 4}, {}, {}, {"STMTS": 15, "FULLSTMT": 16, "STMT": 17, "LVALUE": 18}, {"FUNCDECLS": 25, "FUNCDECL": 27, "EPSILON": 26}, {}, {"VARDECLS": 29, "VARDECL": 11, "EPSILON": 10}, {"IDS": 30}, {}, {}, {}, {"STMTS": 34, "FULLSTMT": 16, "STMT": 17, "LVALUE": 18}, {}, {}, {"EXPR": 37, "CLAUSE": 38, "PRED": 39, "AEXPR": 40, "TERM": 41, "FACTOR": 42, "CONST": 43}, {"EXPR": 51, "CLAUSE": 38, "PRED": 39, "AEXPR": 40, "TERM": 41, "FACTOR": 42, "CONST": 43}, {}, {}, {"EXPR": 53, "CLAUSE": 38, "PRED": 39, "AEXPR": 40, "TERM": 41, "FACTOR": 42, "CONST": 43}, {"OPTOFFSET": 54, "EPSILON": 55}, {}, {}, {"FUNCDECLS": 57, "FUNCDECL": 27, "EPSILON": 26}, {}, {}, {}, {}, {"TYPE": 61}, {}, {}, {}, {"EXPR": 68, "CLAUSE": 38, "PRED": 39, "AEXPR": 40, "TERM": 41, "FACTOR": 42, "CONST": 43}, {}, {}, {"CLAUSEP": 71, "EPSILON": 72}, {"CMP": 74, "LINOP": 75}, {"NONLINOP": 84}, {}, {}, {}, {"EXPR": 89, "CLAUSE": 38, "PRED": 39, "AEXPR": 40, "TERM": 41, "FACTOR": 42, "CONST": 43}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {"EXPR": 92, "CLAUSE": 38, "PRED": 39, "AEXPR": 40, "TERM": 41, "FACTOR": 42, "CONST": 43}, {}, {}, {"TYPE": 94}, {"IDS": 95}, {}, {}, {}, {}, {}, {}, {}, {}, {"STMTS": 98, "FULLSTMT": 16, "STMT": 17, "LVALUE": 18}, {"CLAUSE": 99, "PRED": 39, "AEXPR": 40, "TERM": 41, "FACTOR": 42, "CONST": 43}, {}, {}, {"PRED": 100, "AEXPR": 40, "TERM": 41, "FACTOR": 42, "CONST": 43}, {"AEXPR": 101, "TERM": 41, "FACTOR": 42, "CONST": 43}, {"TERM": 102, "FACTOR": 42, "CONST": 43}, {}, {}, {}, {}, {}, {}, {}, {}, {"FACTOR": 103, "CONST": 43}, {}, {}, {"EXPR": 104, "CLAUSE": 38, "PRED": 39, "AEXPR": 40, "TERM": 41, "FACTOR": 42, "CONST": 43}, {"EXPRS": 105, "NEEXPRS": 107, "EXPR": 108, "CLAUSE": 38, "PRED": 39, "AEXPR": 40, "TERM": 41, "FACTOR": 42, "CONST": 43, "EPSILON": 106}, {}, {"STMTS": 110, "FULLSTMT": 16, "STMT": 17, "LVALUE": 18}, {"EXPR": 111, "CLAUSE": 38, "PRED": 39, "AEXPR": 40, "TERM": 41, "FACTOR": 42, "CONST": 43}, {}, {"PARAMS": 113, "NEPARAMS": 115, "PARAM": 116, "EPSILON": 114}, {"OPTINIT": 118, "EPSILON": 119}, {}, {}, {}, {}, {}, {"CLAUSEP": 124, "EPSILON": 72}, {"LINOP": 75}, {"NONLINOP": 84}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {"CONST": 134}, {}, {}, {"STMTS": 136, "FULLSTMT": 16, "STMT": 17, "LVALUE": 18}, {}, {}, {}, {"NEEXPRS": 137, "EXPR": 108, "CLAUSE": 38, "PRED": 39, "AEXPR": 40, "TERM": 41, "FACTOR": 42, "CONST": 43}, {}, {"EXPR": 138, "CLAUSE": 38, "PRED": 39, "AEXPR": 40, "TERM": 41, "FACTOR": 42, "CONST": 43}, {}, {"NEPARAMS": 140, "PARAM": 116}, {"TYPE": 141}, {}, {}, {}, {}, {}, {}, {"TYPE": 145}, {}, {}, {"TYPE": 146}, {}, {"STMTS": 147, "FULLSTMT": 16, "STMT": 17, "LVALUE": 18}, {}, {}, {}, {"STMTS": 150, "FULLSTMT": 16, "STMT": 17, "LVALUE": 18}, {}, {}, {}, {}]"#).unwrap()
}

fn get_rules() -> Vec<&'static str> {
    vec![
        "PROGRAM",
        "DECLSEG",
        "TYPEDECLS",
        "TYPEDECLS",
        "TYPEDECL",
        "TYPE",
        "TYPE",
        "TYPE",
        "TYPE",
        "TYPE",
        "TYPE",
        "VARDECLS",
        "VARDECLS",
        "VARDECL",
        "IDS",
        "IDS",
        "OPTINIT",
        "OPTINIT",
        "FUNCDECLS",
        "FUNCDECLS",
        "FUNCDECL",
        "PARAMS",
        "PARAMS",
        "NEPARAMS",
        "NEPARAMS",
        "PARAM",
        "STMTS",
        "STMTS",
        "FULLSTMT",
        "STMT",
        "STMT",
        "STMT",
        "STMT",
        "STMT",
        "STMT",
        "STMT",
        "LVALUE",
        "OPTOFFSET",
        "OPTOFFSET",
        "EXPRS",
        "EXPRS",
        "NEEXPRS",
        "NEEXPRS",
        "EXPR",
        "EXPR",
        "CLAUSE",
        "CLAUSEP",
        "CLAUSEP",
        "PRED",
        "PRED",
        "CMP",
        "CMP",
        "CMP",
        "CMP",
        "CMP",
        "CMP",
        "AEXPR",
        "AEXPR",
        "LINOP",
        "LINOP",
        "TERM",
        "TERM",
        "NONLINOP",
        "NONLINOP",
        "FACTOR",
        "FACTOR",
        "FACTOR",
        "FACTOR",
        "FACTOR",
        "CONST",
        "CONST",
        "CONST",
        "CONST",
        "CONST",
        "EPSILON"
    ]
}